{"version":3,"sources":["../src/use.test.jsx"],"names":["RenderProps","props","JSON","stringify","ValidTypes","String","Boolean","Array","Object","Number","Function","RegExp","Map","undefined","Primitives","color","div","document","createElement","render","c","ReactDom","beforeAll","global","console","error","jest","fn","log","describe","test","expect","not","toHaveBeenCalled","toHaveBeenCalledTimes","Shape","shape","a"],"mappings":"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","sourcesContent":["import React from 'react';\nimport ReactDom from 'react-dom';\nimport { InvalidProps } from './typedComponent.stories';\nimport typedComponent from './index';\n\nconst RenderProps = props => (\n  <pre>{JSON.stringify(props, null, 4)}</pre>\n);\n\nconst ValidTypes = typedComponent({\n  String: String,\n  Boolean: Boolean,\n  Array: Array,\n  Object: Object,\n  String: String,\n  Number: Number,\n  Function: Function,\n  RegExp: RegExp,\n  Map: Map,\n  Undefined: undefined,\n})(RenderProps);\n\nconst Primitives = typedComponent({\n  color: 'blue',\n})(RenderProps);\n\nconst div = document.createElement('div');\nconst render = c => ReactDom.render(c, div);\nbeforeAll(() => {\n  global.console = {\n    error: jest.fn(),\n    //  error: console.error,\n    // TODO: REMOVE THIS, it shouldn't log valid prop\n    log: jest.fn(),\n    // log: console.log,\n  };\n});\ndescribe('basic usage by Constructor', () => {\n  test('should render and test valid props', () => {\n    render(\n      <ValidTypes\n        String='1'\n        String={'text'}\n        Number={5}\n        Boolean\n        Boolean={false}\n        Array={[2, 3]}\n        Object={{ c: 4 }}\n        Function={() => {}}\n        RegExp={/hola/}\n        Map={new Map()}\n        Undefined={undefined}\n      />,\n    );\n    expect(global.console.error).not.toHaveBeenCalled();\n\n    // expect(global.console.log).toHaveBeenCalled();\n  });\n  test('should render and log error on invalid props', () => {\n    render(\n      <ValidTypes\n        String\n        Number\n        Boolean={0}\n        Array\n        Object\n        Function\n        RegExp\n        Map\n        Undefined\n      />,\n    );\n    expect(global.console.error).toHaveBeenCalledTimes(9);\n  });\n  test('should detect all types props are required', () => {\n    render(<ValidTypes Undefined />);\n    expect(global.console.error).toHaveBeenCalledTimes(9);\n  });\n});\n\ndescribe('Primitives', () => {\n  test('should work primitives', () => {\n    render(<Primitives color='blue' />);\n    expect(global.console.error).not.toHaveBeenCalled();\n  });\n  test('should warn primitives', () => {\n    render(<Primitives color='red' />);\n    expect(global.console.error).toHaveBeenCalledTimes(1);\n  });\n});\n\ndescribe('Shapes', () => {\n  const Shape = typedComponent({\n    shape: {\n      a: String,\n    },\n  })(RenderProps);\n  test('should work shapes', () => {\n    render(<Shape shape={{ a: 'a' }} />);\n    expect(global.console.error).toHaveBeenCalledTimes(0);\n  });\n  test('should work shapes', () => {\n    render(<Shape shape={{ a: 1 }} />);\n    expect(global.console.error).toHaveBeenCalledTimes(1);\n  });\n});\n"],"file":"use.test.js"}